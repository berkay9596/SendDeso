{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Yeni klas\\xF6r (2)\\\\src\\\\Notification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Button, Box, TextField } from \"@mui/material\";\nimport DesoApi from \"./libs/desoApi\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notification = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [desoApi, setDesoApi] = useState(null);\n  const [follower, setFollower] = useState([]);\n  const [liker, setLiker] = useState([]);\n  const [diamonder, setDiamonder] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [usernames, setUsernames] = useState([]);\n  const [usernamesFollowers, setUsernamesFollowers] = useState([]);\n  const [usernamesDiamonders, setUsernamesDiamonders] = useState([]);\n  const [pictures, setPictures] = useState([]);\n\n  const getNotifications = async () => {\n    const PublicKeyBase58Check = username;\n    const notificationsCall = await desoApi.getNotifications(PublicKeyBase58Check);\n    await setLiker(notificationsCall === null || notificationsCall === void 0 ? void 0 : notificationsCall.Notifications.map(x => x.Metadata.TxnType === \"LIKE\" ? [x.Metadata.TransactorPublicKeyBase58Check, x.Metadata.LikeTxindexMetadata.PostHashHex] : \"x\").filter((item, pos) => item.indexOf(\"x\")));\n    await setFollower(notificationsCall === null || notificationsCall === void 0 ? void 0 : notificationsCall.Notifications.map(x => x.Metadata.TxnType === \"FOLLOW\" ? [x.Metadata.TransactorPublicKeyBase58Check] : \"x\").filter((item, pos) => item.indexOf(\"x\")));\n    await setDiamonder(notificationsCall === null || notificationsCall === void 0 ? void 0 : notificationsCall.Notifications.map(x => x.Metadata.TxnType === \"BASIC_TRANSFER\" ? [x.Metadata.TransactorPublicKeyBase58Check, x.Metadata.BasicTransferTxindexMetadata.DiamondLevel, x.Metadata.BasicTransferTxindexMetadata.PostHashHex] : \"x\").filter((item, pos) => item.indexOf(\"x\")));\n  };\n\n  const getProfilePictures = async body => {\n    return await axios.post(\"https://deso-get-profile-pictures.herokuapp.com/api/get-users-username-and-profile-picture\", body).then(res => setPictures(res.data));\n  };\n\n  console.log(\"PP\", pictures);\n  useEffect(() => {\n    if (liker.length > 0 && diamonder.length > 0 && follower.length > 0) {\n      getUsers();\n      const allPublicKeysLiker = {\n        ListPublicKey: [liker].map(x => x[0])\n      };\n      getProfilePictures(allPublicKeys);\n      const allPublicKeysFollower = {\n        ListPublicKey: [follower].map(x => x[0])\n      };\n      getProfilePictures(allPublicKeysFollower);\n      const allPublicKeysDiamonder = {\n        ListPublicKey: [diamonder].map(x => x[0])\n      };\n      getProfilePictures(allPublicKeysDiamonder);\n    }\n  }, [liker, diamonder, follower]);\n  useEffect(() => {\n    const da = new DesoApi();\n    setDesoApi(da);\n  }, []);\n\n  const getUsers = async () => {\n    const likers = await (liker === null || liker === void 0 ? void 0 : liker.map(x => x[0]));\n    const followers = await (follower === null || follower === void 0 ? void 0 : follower.map(x => x[0]));\n    const diamonders = await (diamonder === null || diamonder === void 0 ? void 0 : diamonder.map(x => x[0]));\n    const users = await desoApi.getUsersStateless(likers);\n    const followerUsers = await desoApi.getUsersStateless(followers);\n    const diamonderUsers = await desoApi.getUsersStateless(diamonders);\n    console.log(\"USERRSS\", users);\n    setUsernames(users === null || users === void 0 ? void 0 : users.UserList.map(user => {\n      var _user$ProfileEntryRes;\n\n      return user === null || user === void 0 ? void 0 : (_user$ProfileEntryRes = user.ProfileEntryResponse) === null || _user$ProfileEntryRes === void 0 ? void 0 : _user$ProfileEntryRes.Username;\n    }));\n    setUsernamesFollowers(followerUsers === null || followerUsers === void 0 ? void 0 : followerUsers.UserList.map(user => {\n      var _user$ProfileEntryRes2;\n\n      return user === null || user === void 0 ? void 0 : (_user$ProfileEntryRes2 = user.ProfileEntryResponse) === null || _user$ProfileEntryRes2 === void 0 ? void 0 : _user$ProfileEntryRes2.Username;\n    }));\n    setUsernamesDiamonders(diamonderUsers === null || diamonderUsers === void 0 ? void 0 : diamonderUsers.UserList.map(user => {\n      var _user$ProfileEntryRes3;\n\n      return user === null || user === void 0 ? void 0 : (_user$ProfileEntryRes3 = user.ProfileEntryResponse) === null || _user$ProfileEntryRes3 === void 0 ? void 0 : _user$ProfileEntryRes3.Username;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"100%\",\n          mb: 2\n        },\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        label: \"Get notifications of any profile using his/her public key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        mb: 2\n      },\n      variant: \"contained\",\n      onClick: getNotifications,\n      children: \"Get notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [pictures.map(picture => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rounded\",\n          src: picture.ProfilePicture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)), usernames.length > 0 ? liker === null || liker === void 0 ? void 0 : liker.map((like, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: pictures[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), \" \", usernames[index], \" Liked your post with the postHashHex\", \" \", like[1], \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)) : \"\", usernamesFollowers.length > 0 ? follower === null || follower === void 0 ? void 0 : follower.map((follow, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", usernamesFollowers[index], \" Followed you.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)) : \"\", usernamesDiamonders.length > 0 ? diamonder.map((trans, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", usernamesDiamonders[index], \" Gave you \", trans[1], \" Diamond\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notification, \"cgeJ6edwgXsnUhlobQjEI/TeCc4=\");\n\n_c = Notification;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/Yeni klas√∂r (2)/src/Notification.js"],"names":["React","useEffect","useState","Button","Box","TextField","DesoApi","axios","Notification","username","setUsername","desoApi","setDesoApi","follower","setFollower","liker","setLiker","diamonder","setDiamonder","loading","setLoading","usernames","setUsernames","usernamesFollowers","setUsernamesFollowers","usernamesDiamonders","setUsernamesDiamonders","pictures","setPictures","getNotifications","PublicKeyBase58Check","notificationsCall","Notifications","map","x","Metadata","TxnType","TransactorPublicKeyBase58Check","LikeTxindexMetadata","PostHashHex","filter","item","pos","indexOf","BasicTransferTxindexMetadata","DiamondLevel","getProfilePictures","body","post","then","res","data","console","log","length","getUsers","allPublicKeysLiker","ListPublicKey","allPublicKeys","allPublicKeysFollower","allPublicKeysDiamonder","da","likers","followers","diamonders","users","getUsersStateless","followerUsers","diamonderUsers","UserList","user","ProfileEntryResponse","Username","mb","width","e","target","value","picture","ProfilePicture","like","index","follow","trans"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Box, TextField } from \"@mui/material\";\r\nimport DesoApi from \"./libs/desoApi\";\r\nimport axios from \"axios\";\r\nconst Notification = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [desoApi, setDesoApi] = useState(null);\r\n\r\n  const [follower, setFollower] = useState([]);\r\n  const [liker, setLiker] = useState([]);\r\n  const [diamonder, setDiamonder] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [usernames, setUsernames] = useState([]);\r\n  const [usernamesFollowers, setUsernamesFollowers] = useState([]);\r\n  const [usernamesDiamonders, setUsernamesDiamonders] = useState([]);\r\n\r\n  const [pictures, setPictures] = useState([]);\r\n  const getNotifications = async () => {\r\n    const PublicKeyBase58Check = username;\r\n    const notificationsCall = await desoApi.getNotifications(\r\n      PublicKeyBase58Check\r\n    );\r\n    await setLiker(\r\n      notificationsCall?.Notifications.map((x) =>\r\n        x.Metadata.TxnType === \"LIKE\"\r\n          ? [\r\n              x.Metadata.TransactorPublicKeyBase58Check,\r\n              x.Metadata.LikeTxindexMetadata.PostHashHex,\r\n            ]\r\n          : \"x\"\r\n      ).filter((item, pos) => item.indexOf(\"x\"))\r\n    );\r\n    await setFollower(\r\n      notificationsCall?.Notifications.map((x) =>\r\n        x.Metadata.TxnType === \"FOLLOW\"\r\n          ? [x.Metadata.TransactorPublicKeyBase58Check]\r\n          : \"x\"\r\n      ).filter((item, pos) => item.indexOf(\"x\"))\r\n    );\r\n    await setDiamonder(\r\n      notificationsCall?.Notifications.map((x) =>\r\n        x.Metadata.TxnType === \"BASIC_TRANSFER\"\r\n          ? [\r\n              x.Metadata.TransactorPublicKeyBase58Check,\r\n              x.Metadata.BasicTransferTxindexMetadata.DiamondLevel,\r\n              x.Metadata.BasicTransferTxindexMetadata.PostHashHex,\r\n            ]\r\n          : \"x\"\r\n      ).filter((item, pos) => item.indexOf(\"x\"))\r\n    );\r\n  };\r\n\r\n  const getProfilePictures = async (body) => {\r\n    return await axios\r\n      .post(\r\n        \"https://deso-get-profile-pictures.herokuapp.com/api/get-users-username-and-profile-picture\",\r\n        body\r\n      )\r\n      .then((res) => setPictures(res.data));\r\n  };\r\n\r\n  console.log(\"PP\", pictures);\r\n  useEffect(() => {\r\n    if (liker.length > 0 && diamonder.length > 0 && follower.length > 0) {\r\n      getUsers();\r\n      const allPublicKeysLiker = {\r\n        ListPublicKey: [liker].map((x) => x[0]),\r\n      };\r\n      getProfilePictures(allPublicKeys);\r\n      const allPublicKeysFollower = {\r\n        ListPublicKey: [follower].map((x) => x[0]),\r\n      };\r\n      getProfilePictures(allPublicKeysFollower);\r\n\r\n      const allPublicKeysDiamonder = {\r\n        ListPublicKey: [diamonder].map((x) => x[0]),\r\n      };\r\n      getProfilePictures(allPublicKeysDiamonder);\r\n    }\r\n  }, [liker, diamonder, follower]);\r\n\r\n  useEffect(() => {\r\n    const da = new DesoApi();\r\n    setDesoApi(da);\r\n  }, []);\r\n\r\n  const getUsers = async () => {\r\n    const likers = await liker?.map((x) => x[0]);\r\n    const followers = await follower?.map((x) => x[0]);\r\n    const diamonders = await diamonder?.map((x) => x[0]);\r\n    const users = await desoApi.getUsersStateless(likers);\r\n    const followerUsers = await desoApi.getUsersStateless(followers);\r\n    const diamonderUsers = await desoApi.getUsersStateless(diamonders);\r\n\r\n    console.log(\"USERRSS\", users);\r\n    setUsernames(\r\n      users?.UserList.map((user) => user?.ProfileEntryResponse?.Username)\r\n    );\r\n    setUsernamesFollowers(\r\n      followerUsers?.UserList.map(\r\n        (user) => user?.ProfileEntryResponse?.Username\r\n      )\r\n    );\r\n    setUsernamesDiamonders(\r\n      diamonderUsers?.UserList.map(\r\n        (user) => user?.ProfileEntryResponse?.Username\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Box sx={{ mb: 2 }}>\r\n        <TextField\r\n          sx={{ width: \"100%\", mb: 2 }}\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          label=\"Get notifications of any profile using his/her public key\"\r\n        />\r\n      </Box>\r\n      <Box />\r\n      <Button sx={{ mb: 2 }} variant=\"contained\" onClick={getNotifications}>\r\n        Get notifications\r\n      </Button>\r\n\r\n      <>\r\n        <div>\r\n          {pictures.map((picture) => (\r\n            <img className=\"rounded\" src={picture.ProfilePicture} />\r\n          ))}\r\n          {usernames.length > 0\r\n            ? liker?.map((like, index) => (\r\n                <ul>\r\n                  <li>\r\n                    <img src={pictures[index]}/>\r\n                    {\" \"}\r\n                    {usernames[index]} Liked your post with the postHashHex{\" \"}\r\n                    {like[1]}.\r\n                  </li>\r\n                </ul>\r\n              ))\r\n            : \"\"}\r\n          {usernamesFollowers.length > 0\r\n            ? follower?.map((follow, index) => (\r\n                <ul>\r\n                   {/* <img src={pictures[index]}/> */}\r\n                  <li> {usernamesFollowers[index]} Followed you.</li>\r\n                </ul>\r\n              ))\r\n            : \"\"}\r\n          {usernamesDiamonders.length > 0\r\n            ? diamonder.map((trans, index) => (\r\n                <ul>\r\n                  <li>\r\n                  {/* <img src={pictures[index]}/> */}\r\n                    {\" \"}\r\n                    {usernamesDiamonders[index]} Gave you {trans[1]} Diamond\r\n                  </li>\r\n                </ul>\r\n              ))\r\n            : \"\"}\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}