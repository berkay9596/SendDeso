{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Yeni klas\\xF6r (2)\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createRef } from \"react\";\nimport { Box, Grid, Stack, Button, TextField } from \"@mui/material\";\nimport DesoIdentity from \"./libs/desoIdentity\";\nimport DesoApi from \"./libs/desoApi\";\nimport Notification from \"./Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [toUsername, setToUsername] = useState(\"\");\n  const [message, setMessage] = useState(\"ðŸ‘‰ waiting for you to send your GM...\");\n  const [publicKey, setSetPublicKey] = useState(null);\n  const [desoIdentity, setDesoIdentity] = useState(null);\n  const [desoApi, setDesoApi] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const IdentityUsersKey = \"identityUsersV2\";\n  useEffect(() => {\n    const di = new DesoIdentity();\n    setDesoIdentity(di);\n    const da = new DesoApi();\n    setDesoApi(da);\n    let user = {};\n\n    if (localStorage.getItem(IdentityUsersKey) === \"undefined\") {\n      user = {};\n    } else if (localStorage.getItem(IdentityUsersKey)) {\n      user = JSON.parse(localStorage.getItem(IdentityUsersKey) || \"{}\");\n    }\n\n    if (user.publicKey) {\n      setLoggedIn(true);\n      setSetPublicKey(user.publicKey);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const login = async () => {\n    const user = await desoIdentity.loginAsync(4);\n    setSetPublicKey(user.publicKey);\n    setLoggedIn(true);\n  };\n\n  const logout = async () => {\n    await desoIdentity.logout(publicKey);\n    setSetPublicKey(null);\n    setLoggedIn(false);\n  };\n\n  const sendGm = async () => {\n    //alert(\"I will eventually create your post\")\n    const body = \"Deneme \" + toUsername;\n    const extraData = {\n      app: \"Deneme\",\n      type: \"Deneme\"\n    };\n    const rtnSubmitPost = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitPost(publicKey, body, extraData));\n    const transactionHex = rtnSubmitPost === null || rtnSubmitPost === void 0 ? void 0 : rtnSubmitPost.TransactionHex;\n    const signedTransactionHex = await (desoIdentity === null || desoIdentity === void 0 ? void 0 : desoIdentity.signTxAsync(transactionHex));\n    const rtnSubmitTransaction = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitTransaction(signedTransactionHex));\n\n    if (rtnSubmitTransaction) {\n      setMessage(\"ðŸŽ‰ GM Sent!!! ðŸ¥³\");\n    }\n  };\n\n  const likePost = async () => {\n    for (let i = 0; i < posts.length; i++) {\n      const likedPostHashHex = posts[i];\n      const isUnlike = false;\n      const minFeeRateNanosPerKB = 1000;\n      const createLike = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.createLike(isUnlike, likedPostHashHex, minFeeRateNanosPerKB, publicKey));\n      const transactionHex = createLike === null || createLike === void 0 ? void 0 : createLike.TransactionHex;\n      const signedTransactionHex = await (desoIdentity === null || desoIdentity === void 0 ? void 0 : desoIdentity.signTxAsync(transactionHex));\n      const rtnLike = await desoApi.submitTransaction(signedTransactionHex);\n\n      if (rtnLike) {\n        console.log(\"Post beÄŸenildi\");\n      }\n    }\n  };\n\n  const nft = async postHashHex => {\n    const createNft = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.makeThePostNft(postHashHex, publicKey));\n    const transactionHex3 = await (createNft === null || createNft === void 0 ? void 0 : createNft.TransactionHex);\n    const signedTransactionHex3 = await (desoIdentity === null || desoIdentity === void 0 ? void 0 : desoIdentity.signTxAsync(transactionHex3));\n    const rtnSubmitTransaction2 = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitTransaction(signedTransactionHex3));\n\n    if (rtnSubmitTransaction2) {\n      const transferNft = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.transferNft(publicKey, postHashHex));\n      const transactionHex = await (transferNft === null || transferNft === void 0 ? void 0 : transferNft.TransactionHex);\n      const signedTransactionHex4 = await (desoIdentity === null || desoIdentity === void 0 ? void 0 : desoIdentity.signTxAsync(transactionHex));\n      const rtnSubmitTransaction4 = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitTransaction(signedTransactionHex4));\n\n      if (rtnSubmitTransaction4) {\n        alert(\"Done\");\n      }\n    }\n  };\n\n  const sendMoney = async () => {\n    const createSend = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.sendBitclout(publicKey));\n    const transactionHex = createSend === null || createSend === void 0 ? void 0 : createSend.TransactionHex;\n    const signedTransactionHex = await (desoIdentity === null || desoIdentity === void 0 ? void 0 : desoIdentity.signTxAsync(transactionHex));\n    const rtnSend = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitTransaction(signedTransactionHex));\n\n    if (rtnSend) {\n      alert(\"Money succesfully sent to BillyThai\");\n    }\n  };\n\n  const mintNft = async () => {\n    const createSend = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.sendBitclout(publicKey));\n    const transactionHex = createSend === null || createSend === void 0 ? void 0 : createSend.TransactionHex;\n    const signedTransactionHex = await (desoIdentity === null || desoIdentity === void 0 ? void 0 : desoIdentity.signTxAsync(transactionHex));\n    const rtnSend = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitTransaction(signedTransactionHex));\n\n    if (rtnSend) {\n      const body = \"Deneme3 \";\n      const extraData = {\n        app: \"Deneme3\",\n        type: \"Deneme3\"\n      };\n      const rtnSubmitPost = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitPost(publicKey, body, extraData));\n      const transactionHex2 = await (rtnSubmitPost === null || rtnSubmitPost === void 0 ? void 0 : rtnSubmitPost.TransactionHex);\n      const signedTransactionHex2 = await (desoIdentity === null || desoIdentity === void 0 ? void 0 : desoIdentity.signTxAsync(transactionHex2));\n      const rtnSubmitTransaction = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitTransaction(signedTransactionHex2));\n\n      if (rtnSubmitTransaction) {\n        const TxnHashHex = rtnSubmitTransaction === null || rtnSubmitTransaction === void 0 ? void 0 : rtnSubmitTransaction.TxnHashHex;\n        setTimeout(() => {\n          nft(TxnHashHex);\n        }, 2000);\n      }\n    }\n  };\n\n  const getPosts = async () => {\n    const createPosts = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.getPosts());\n    console.log(\"createPosts\", createPosts);\n    setPosts(createPosts);\n    const transactionHex = createPosts === null || createPosts === void 0 ? void 0 : createPosts.TransactionHex;\n    const signedTransactionHex = await (desoIdentity === null || desoIdentity === void 0 ? void 0 : desoIdentity.signTxAsync(transactionHex));\n    const rtnSend = await (desoApi === null || desoApi === void 0 ? void 0 : desoApi.submitTransaction(signedTransactionHex));\n\n    if (rtnSend) {\n      console.log(\"baÅŸarÄ±lÄ±\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"desoidentity\",\n      id: \"identity\",\n      frameBorder: \"0\",\n      src: \"https://identity.deso.org/embed?v=2\",\n      style: {\n        height: \"100vh\",\n        width: \"100vw\",\n        display: \"none\",\n        position: \"fixed\",\n        zIndex: 1000,\n        left: 0,\n        top: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 0,\n        lg: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        lg: 4,\n        sx: {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              mt: 2\n            },\n            children: loggedIn ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: logout,\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: login,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [\"Logged publicKey is: \", publicKey]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                mb: 2\n              },\n              variant: \"contained\",\n              onClick: likePost,\n              children: \"Send money to BillyThai\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 0,\n        lg: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"hyOuwzcLgT1zL/C6lihF6BItB9w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/Yeni klasÃ¶r (2)/src/App.js"],"names":["React","useState","useEffect","createRef","Box","Grid","Stack","Button","TextField","DesoIdentity","DesoApi","Notification","App","loggedIn","setLoggedIn","toUsername","setToUsername","message","setMessage","publicKey","setSetPublicKey","desoIdentity","setDesoIdentity","desoApi","setDesoApi","posts","setPosts","IdentityUsersKey","di","da","user","localStorage","getItem","JSON","parse","login","loginAsync","logout","sendGm","body","extraData","app","type","rtnSubmitPost","submitPost","transactionHex","TransactionHex","signedTransactionHex","signTxAsync","rtnSubmitTransaction","submitTransaction","likePost","i","length","likedPostHashHex","isUnlike","minFeeRateNanosPerKB","createLike","rtnLike","console","log","nft","postHashHex","createNft","makeThePostNft","transactionHex3","signedTransactionHex3","rtnSubmitTransaction2","transferNft","signedTransactionHex4","rtnSubmitTransaction4","alert","sendMoney","createSend","sendBitclout","rtnSend","mintNft","transactionHex2","signedTransactionHex2","TxnHashHex","setTimeout","getPosts","createPosts","height","width","display","position","zIndex","left","top","alignItems","justifyContent","mb","mt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport { Box, Grid, Stack, Button, TextField } from \"@mui/material\";\nimport DesoIdentity from \"./libs/desoIdentity\";\n\nimport DesoApi from \"./libs/desoApi\";\n\nimport Notification from \"./Notification\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [toUsername, setToUsername] = useState(\"\");\n  const [message, setMessage] = useState(\n    \"ðŸ‘‰ waiting for you to send your GM...\"\n  );\n  const [publicKey, setSetPublicKey] = useState(null);\n  const [desoIdentity, setDesoIdentity] = useState(null);\n  const [desoApi, setDesoApi] = useState(null);\n  const [posts, setPosts] = useState([]);\n\n  const IdentityUsersKey = \"identityUsersV2\";\n  useEffect(() => {\n    const di = new DesoIdentity();\n    setDesoIdentity(di);\n    const da = new DesoApi();\n    setDesoApi(da);\n\n    let user = {};\n    if (localStorage.getItem(IdentityUsersKey) === \"undefined\") {\n      user = {};\n    } else if (localStorage.getItem(IdentityUsersKey)) {\n      user = JSON.parse(localStorage.getItem(IdentityUsersKey) || \"{}\");\n    }\n\n    if (user.publicKey) {\n      setLoggedIn(true);\n      setSetPublicKey(user.publicKey);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const login = async () => {\n    const user = await desoIdentity.loginAsync(4);\n    setSetPublicKey(user.publicKey);\n    setLoggedIn(true);\n  };\n  const logout = async () => {\n    await desoIdentity.logout(publicKey);\n    setSetPublicKey(null);\n    setLoggedIn(false);\n  };\n\n  const sendGm = async () => {\n    //alert(\"I will eventually create your post\")\n    const body = \"Deneme \" + toUsername;\n    const extraData = {\n      app: \"Deneme\",\n      type: \"Deneme\",\n    };\n    const rtnSubmitPost = await desoApi?.submitPost(publicKey, body, extraData);\n    const transactionHex = rtnSubmitPost?.TransactionHex;\n    const signedTransactionHex = await desoIdentity?.signTxAsync(\n      transactionHex\n    );\n    const rtnSubmitTransaction = await desoApi?.submitTransaction(\n      signedTransactionHex\n    );\n\n    if (rtnSubmitTransaction) {\n      setMessage(\"ðŸŽ‰ GM Sent!!! ðŸ¥³\");\n    }\n  };\n\n  const likePost = async () => {\n    for (let i = 0; i < posts.length; i++) {\n      const likedPostHashHex = posts[i];\n      const isUnlike = false;\n      const minFeeRateNanosPerKB = 1000;\n      const createLike = await desoApi?.createLike(\n        isUnlike,\n        likedPostHashHex,\n        minFeeRateNanosPerKB,\n        publicKey\n      );\n      const transactionHex = createLike?.TransactionHex;\n      const signedTransactionHex = await desoIdentity?.signTxAsync(\n        transactionHex\n      );\n      const rtnLike = await desoApi.submitTransaction(signedTransactionHex);\n\n      if (rtnLike) {\n        console.log(\"Post beÄŸenildi\");\n      }\n    }\n  };\n\n  const nft = async (postHashHex) => {\n    const createNft = await desoApi?.makeThePostNft(postHashHex, publicKey);\n    const transactionHex3 = await createNft?.TransactionHex;\n    const signedTransactionHex3 = await desoIdentity?.signTxAsync(\n      transactionHex3\n    );\n    const rtnSubmitTransaction2 = await desoApi?.submitTransaction(\n      signedTransactionHex3\n    );\n    if (rtnSubmitTransaction2) {\n      const transferNft = await desoApi?.transferNft(publicKey, postHashHex);\n      const transactionHex = await transferNft?.TransactionHex;\n      const signedTransactionHex4 = await desoIdentity?.signTxAsync(\n        transactionHex\n      );\n      const rtnSubmitTransaction4 = await desoApi?.submitTransaction(\n        signedTransactionHex4\n      );\n      if (rtnSubmitTransaction4) {\n        alert(\"Done\");\n      }\n    }\n  };\nconst sendMoney =async()=>{\n  const createSend = await desoApi?.sendBitclout(publicKey);\n  const transactionHex = createSend?.TransactionHex;\n  const signedTransactionHex = await desoIdentity?.signTxAsync(\n    transactionHex\n  );\n  const rtnSend = await desoApi?.submitTransaction(signedTransactionHex);\n  if (rtnSend) {\n    alert(\"Money succesfully sent to BillyThai\")\n  }\n}\n  const mintNft = async () => {\n    const createSend = await desoApi?.sendBitclout(publicKey);\n    const transactionHex = createSend?.TransactionHex;\n    const signedTransactionHex = await desoIdentity?.signTxAsync(\n      transactionHex\n    );\n    const rtnSend = await desoApi?.submitTransaction(signedTransactionHex);\n    if (rtnSend) {\n      const body = \"Deneme3 \";\n      const extraData = {\n        app: \"Deneme3\",\n        type: \"Deneme3\",\n      };\n      const rtnSubmitPost = await desoApi?.submitPost(\n        publicKey,\n        body,\n        extraData\n      );\n      const transactionHex2 = await rtnSubmitPost?.TransactionHex;\n      const signedTransactionHex2 = await desoIdentity?.signTxAsync(\n        transactionHex2\n      );\n      const rtnSubmitTransaction = await desoApi?.submitTransaction(\n        signedTransactionHex2\n      );\n      if (rtnSubmitTransaction) {\n        const TxnHashHex = rtnSubmitTransaction?.TxnHashHex;\n        setTimeout(() => {\n          nft(TxnHashHex);\n        }, 2000);\n      }\n    }\n  };\n  const getPosts = async () => {\n    const createPosts = await desoApi?.getPosts();\n    console.log(\"createPosts\", createPosts);\n    setPosts(createPosts);\n    const transactionHex = createPosts?.TransactionHex;\n\n    const signedTransactionHex = await desoIdentity?.signTxAsync(\n      transactionHex\n    );\n    const rtnSend = await desoApi?.submitTransaction(signedTransactionHex);\n\n    if (rtnSend) {\n      console.log(\"baÅŸarÄ±lÄ±\");\n    }\n  };\n\n  return (\n    <>\n      <iframe\n        title=\"desoidentity\"\n        id=\"identity\"\n        frameBorder=\"0\"\n        src=\"https://identity.deso.org/embed?v=2\"\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n          display: \"none\",\n          position: \"fixed\",\n          zIndex: 1000,\n          left: 0,\n          top: 0,\n        }}\n      ></iframe>\n      <Grid container>\n        <Grid item sm={0} lg={4}></Grid>\n        <Grid\n          item\n          sm={12}\n          lg={4}\n          sx={{\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\",\n          }}\n        >\n          <Stack>\n            <Box sx={{ mb: 2, mt: 2 }}>\n              {loggedIn ? (\n                <Button variant=\"contained\" onClick={logout}>\n                  Log Out\n                </Button>\n              ) : (\n                <Button variant=\"contained\" onClick={login}>\n                  Login\n                </Button>\n              )}\n            </Box>\n            {loggedIn ? (\n              <>\n                <Box sx={{ mb: 2 }}>\n                  Logged publicKey is: {publicKey}\n                </Box>\n                {/* <Box sx={{ mb: 2 }}>\n                  <TextField\n                    sx={{ width: \"100%\", mb: 2 }}\n                    id=\"event-username\"\n                    label=\"Send GM to...\"\n                    value={toUsername}\n                    onChange={(e) => setToUsername(e.target.value)}\n                  />\n                </Box>\n                <Box sx={{ mb: 2 }}>\n                  <Button variant=\"contained\" onClick={sendGm}>\n                    {\" \"}\n                    Send GM{\" \"}\n                  </Button>\n                </Box> */}\n                {/* <Button sx={{ mb: 2 }} variant=\"contained\" onClick={likePost}>\n                  Like the post\n                </Button>\n                <Button sx={{ mb: 2 }} variant=\"contained\" onClick={mintNft}>\n                  Mint NFT\n                </Button>\n                <Button sx={{ mb: 2 }} variant=\"contained\" onClick={getPosts}>\n                  getPosts\n                </Button>\n                <Notification /> */}\n                <Button sx={{ mb: 2 }} variant=\"contained\" onClick={likePost}>\n                  Send money to BillyThai\n                </Button>\n                <Box sx={{ mb: 2 }}>{message}</Box>\n              </>\n            ) : null}\n          </Stack>\n        </Grid>\n        <Grid item sm={0} lg={4}></Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}