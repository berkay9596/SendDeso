{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Yeni klas\\xF6r (2)\\\\src\\\\Notification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Button, Box, TextField } from \"@mui/material\";\nimport DesoApi from \"./libs/desoApi\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notification = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [desoApi, setDesoApi] = useState(null);\n  const [follower, setFollower] = useState([]);\n  const [liker, setLiker] = useState([]);\n  const [diamonder, setDiamonder] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [usernames, setUsernames] = useState([]);\n  const [usernamesFollowers, setUsernamesFollowers] = useState([]);\n  const [usernamesDiamonders, setUsernamesDiamonders] = useState([]);\n  const [pictures, setPictures] = useState([]);\n  const [pictures2, setPictures2] = useState([]);\n  const [pictures3, setPictures3] = useState([]);\n\n  const getNotifications = async () => {\n    const PublicKeyBase58Check = username;\n    const notificationsCall = await desoApi.getNotifications(PublicKeyBase58Check);\n    await setLiker(notificationsCall === null || notificationsCall === void 0 ? void 0 : notificationsCall.Notifications.map(x => x.Metadata.TxnType === \"LIKE\" ? [x.Metadata.TransactorPublicKeyBase58Check, x.Metadata.LikeTxindexMetadata.PostHashHex] : \"x\").filter((item, pos) => item.indexOf(\"x\")));\n    await setFollower(notificationsCall === null || notificationsCall === void 0 ? void 0 : notificationsCall.Notifications.map(x => x.Metadata.TxnType === \"FOLLOW\" ? [x.Metadata.TransactorPublicKeyBase58Check] : \"x\").filter((item, pos) => item.indexOf(\"x\")));\n    await setDiamonder(notificationsCall === null || notificationsCall === void 0 ? void 0 : notificationsCall.Notifications.map(x => x.Metadata.TxnType === \"BASIC_TRANSFER\" ? [x.Metadata.TransactorPublicKeyBase58Check, x.Metadata.BasicTransferTxindexMetadata.DiamondLevel, x.Metadata.BasicTransferTxindexMetadata.PostHashHex] : \"x\").filter((item, pos) => item.indexOf(\"x\")));\n  };\n\n  const getProfilePictures = async body => {\n    return await axios.post(\"https://deso-get-profile-pictures.herokuapp.com/api/get-users-username-and-profile-picture\", body).then(res => setPictures(res.data));\n  };\n\n  const getProfilePictures2 = async body => {\n    return await axios.post(\"https://deso-get-profile-pictures.herokuapp.com/api/get-users-username-and-profile-picture\", body).then(res => setPictures2(res.data));\n  };\n\n  const getProfilePictures3 = async body => {\n    return await axios.post(\"https://deso-get-profile-pictures.herokuapp.com/api/get-users-username-and-profile-picture\", body).then(res => setPictures3(res.data));\n  };\n\n  useEffect(() => {\n    if (liker.length > 0 && diamonder.length > 0 && follower.length > 0) {\n      getUsers();\n      const allPublicKeysLiker = {\n        ListPublicKey: liker.map(x => x[0])\n      };\n      getProfilePictures(allPublicKeysLiker);\n      const allPublicKeysFollower = {\n        ListPublicKey: follower.map(x => x[0])\n      };\n      getProfilePictures2(allPublicKeysFollower);\n      const allPublicKeysDiamonder = {\n        ListPublicKey: diamonder.map(x => x[0])\n      };\n      getProfilePictures3(allPublicKeysDiamonder);\n    }\n  }, [liker, diamonder, follower]);\n  useEffect(() => {\n    const da = new DesoApi();\n    setDesoApi(da);\n  }, []);\n\n  const filterNotifications = async () => {\n    const PublicKeyBase58Check = username;\n    const notificationsCall = await desoApi.getNotifications(PublicKeyBase58Check);\n    console.log(\"notificationsCall\", notificationsCall); //SUBMIT_POST \"FOLLOW\" DAO_COIN_TRANSFER \"LIKE\" NFT_TRANSFER \"BASIC_TRANSFER\" COIN_TRANSFER \n  };\n\n  const getUsers = async () => {\n    const likers = await (liker === null || liker === void 0 ? void 0 : liker.map(x => x[0]));\n    const followers = await (follower === null || follower === void 0 ? void 0 : follower.map(x => x[0]));\n    const diamonders = await (diamonder === null || diamonder === void 0 ? void 0 : diamonder.map(x => x[0]));\n    const users = await desoApi.getUsersStateless(likers);\n    const followerUsers = await desoApi.getUsersStateless(followers);\n    const diamonderUsers = await desoApi.getUsersStateless(diamonders);\n    await setUsernames(users === null || users === void 0 ? void 0 : users.UserList.map(user => {\n      var _user$ProfileEntryRes;\n\n      return user === null || user === void 0 ? void 0 : (_user$ProfileEntryRes = user.ProfileEntryResponse) === null || _user$ProfileEntryRes === void 0 ? void 0 : _user$ProfileEntryRes.Username;\n    }));\n    await setUsernamesFollowers(followerUsers === null || followerUsers === void 0 ? void 0 : followerUsers.UserList.map(user => {\n      var _user$ProfileEntryRes2;\n\n      return user === null || user === void 0 ? void 0 : (_user$ProfileEntryRes2 = user.ProfileEntryResponse) === null || _user$ProfileEntryRes2 === void 0 ? void 0 : _user$ProfileEntryRes2.Username;\n    }));\n    await setUsernamesDiamonders(diamonderUsers === null || diamonderUsers === void 0 ? void 0 : diamonderUsers.UserList.map(user => {\n      var _user$ProfileEntryRes3;\n\n      return user === null || user === void 0 ? void 0 : (_user$ProfileEntryRes3 = user.ProfileEntryResponse) === null || _user$ProfileEntryRes3 === void 0 ? void 0 : _user$ProfileEntryRes3.Username;\n    }));\n    setLoading(false);\n  };\n\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"100%\",\n          mb: 2\n        },\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        label: \"Get notifications of any profile using his/her public key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        mb: 2\n      },\n      variant: \"contained\",\n      onClick: getNotifications,\n      children: \"Get notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [usernames.length > 0 ? liker === null || liker === void 0 ? void 0 : liker.map((like, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                borderTop: \"1px solid #b0b0b0\",\n                padding: \"0.3rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: \"relative\",\n                  bottom: \"10px\",\n                  right: \"5px\"\n                },\n                children: \"\\u2764\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: pictures.map(x => x.ProfilePicture)[index],\n                style: {\n                  height: \"38px\",\n                  width: \"38px\",\n                  borderRadius: \"50%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 27\n              }, this), \" \", usernames[index], \" Liked your post \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://diamondapp.com/posts/${like[1]}`,\n                style: {\n                  cursor: \"pointer\"\n                },\n                target: \"blank\",\n                children: \"See more...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)) : \"\", usernamesFollowers.length > 0 ? follower === null || follower === void 0 ? void 0 : follower.map((follow, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                borderTop: \"1px solid #b0b0b0\",\n                padding: \"0.3rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: \"relative\",\n                  bottom: \"10px\",\n                  right: \"5px\"\n                },\n                children: \"\\u2764\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: pictures2.map(x => x.ProfilePicture)[index],\n                style: {\n                  height: \"38px\",\n                  width: \"38px\",\n                  borderRadius: \"50%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 25\n              }, this), usernamesFollowers[index], \" Followed you.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)) : \"\", usernamesDiamonders.length > 0 ? diamonder.map((trans, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                borderTop: \"1px solid #b0b0b0\",\n                padding: \"0.3rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: \"relative\",\n                  bottom: \"10px\",\n                  right: \"5px\"\n                },\n                children: \"\\u2764\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: pictures3.map(x => x.ProfilePicture)[index],\n                style: {\n                  height: \"38px\",\n                  width: \"38px\",\n                  borderRadius: \"50%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 25\n              }, this), \" \", usernamesDiamonders[index], \" Gave you \", trans[1], \" Diamond\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this)) : \"\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notification, \"+Mmxnjj66iClpENkrnnFrnSX/us=\");\n\n_c = Notification;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/Yeni klasör (2)/src/Notification.js"],"names":["React","useEffect","useState","Button","Box","TextField","DesoApi","axios","Notification","username","setUsername","desoApi","setDesoApi","follower","setFollower","liker","setLiker","diamonder","setDiamonder","loading","setLoading","usernames","setUsernames","usernamesFollowers","setUsernamesFollowers","usernamesDiamonders","setUsernamesDiamonders","pictures","setPictures","pictures2","setPictures2","pictures3","setPictures3","getNotifications","PublicKeyBase58Check","notificationsCall","Notifications","map","x","Metadata","TxnType","TransactorPublicKeyBase58Check","LikeTxindexMetadata","PostHashHex","filter","item","pos","indexOf","BasicTransferTxindexMetadata","DiamondLevel","getProfilePictures","body","post","then","res","data","getProfilePictures2","getProfilePictures3","length","getUsers","allPublicKeysLiker","ListPublicKey","allPublicKeysFollower","allPublicKeysDiamonder","da","filterNotifications","console","log","likers","followers","diamonders","users","getUsersStateless","followerUsers","diamonderUsers","UserList","user","ProfileEntryResponse","Username","mb","width","e","target","value","like","index","borderTop","padding","position","bottom","right","ProfilePicture","height","borderRadius","cursor","follow","trans"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,eAAvC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,kBAAD,EAAqBC,qBAArB,IAA8CtB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACuB,mBAAD,EAAsBC,sBAAtB,IAAgDxB,QAAQ,CAAC,EAAD,CAA9D;AAEA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAM+B,gBAAgB,GAAG,YAAY;AACnC,UAAMC,oBAAoB,GAAGzB,QAA7B;AACA,UAAM0B,iBAAiB,GAAG,MAAMxB,OAAO,CAACsB,gBAAR,CAC9BC,oBAD8B,CAAhC;AAGA,UAAMlB,QAAQ,CACZmB,iBADY,aACZA,iBADY,uBACZA,iBAAiB,CAAEC,aAAnB,CAAiCC,GAAjC,CAAsCC,CAAD,IACnCA,CAAC,CAACC,QAAF,CAAWC,OAAX,KAAuB,MAAvB,GACI,CACEF,CAAC,CAACC,QAAF,CAAWE,8BADb,EAEEH,CAAC,CAACC,QAAF,CAAWG,mBAAX,CAA+BC,WAFjC,CADJ,GAKI,GANN,EAOEC,MAPF,CAOS,CAACC,IAAD,EAAOC,GAAP,KAAeD,IAAI,CAACE,OAAL,CAAa,GAAb,CAPxB,CADY,CAAd;AAUA,UAAMjC,WAAW,CACfqB,iBADe,aACfA,iBADe,uBACfA,iBAAiB,CAAEC,aAAnB,CAAiCC,GAAjC,CAAsCC,CAAD,IACnCA,CAAC,CAACC,QAAF,CAAWC,OAAX,KAAuB,QAAvB,GACI,CAACF,CAAC,CAACC,QAAF,CAAWE,8BAAZ,CADJ,GAEI,GAHN,EAIEG,MAJF,CAIS,CAACC,IAAD,EAAOC,GAAP,KAAeD,IAAI,CAACE,OAAL,CAAa,GAAb,CAJxB,CADe,CAAjB;AAOA,UAAM7B,YAAY,CAChBiB,iBADgB,aAChBA,iBADgB,uBAChBA,iBAAiB,CAAEC,aAAnB,CAAiCC,GAAjC,CAAsCC,CAAD,IACnCA,CAAC,CAACC,QAAF,CAAWC,OAAX,KAAuB,gBAAvB,GACI,CACEF,CAAC,CAACC,QAAF,CAAWE,8BADb,EAEEH,CAAC,CAACC,QAAF,CAAWS,4BAAX,CAAwCC,YAF1C,EAGEX,CAAC,CAACC,QAAF,CAAWS,4BAAX,CAAwCL,WAH1C,CADJ,GAMI,GAPN,EAQEC,MARF,CAQS,CAACC,IAAD,EAAOC,GAAP,KAAeD,IAAI,CAACE,OAAL,CAAa,GAAb,CARxB,CADgB,CAAlB;AAWD,GAjCD;;AAmCA,QAAMG,kBAAkB,GAAG,MAAOC,IAAP,IAAgB;AACzC,WAAO,MAAM5C,KAAK,CACf6C,IADU,CAET,4FAFS,EAGTD,IAHS,EAKVE,IALU,CAKJC,GAAD,IAAS1B,WAAW,CAAC0B,GAAG,CAACC,IAAL,CALf,CAAb;AAMD,GAPD;;AAQA,QAAMC,mBAAmB,GAAG,MAAOL,IAAP,IAAgB;AAC1C,WAAO,MAAM5C,KAAK,CACf6C,IADU,CAET,4FAFS,EAGTD,IAHS,EAKVE,IALU,CAKJC,GAAD,IAASxB,YAAY,CAACwB,GAAG,CAACC,IAAL,CALhB,CAAb;AAMD,GAPD;;AAQA,QAAME,mBAAmB,GAAG,MAAON,IAAP,IAAgB;AAC1C,WAAO,MAAM5C,KAAK,CACf6C,IADU,CAET,4FAFS,EAGTD,IAHS,EAKVE,IALU,CAKJC,GAAD,IAAStB,YAAY,CAACsB,GAAG,CAACC,IAAL,CALhB,CAAb;AAMD,GAPD;;AAQAtD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,KAAK,CAAC2C,MAAN,GAAe,CAAf,IAAoBzC,SAAS,CAACyC,MAAV,GAAmB,CAAvC,IAA4C7C,QAAQ,CAAC6C,MAAT,GAAkB,CAAlE,EAAqE;AACnEC,MAAAA,QAAQ;AACR,YAAMC,kBAAkB,GAAG;AACzBC,QAAAA,aAAa,EAAE9C,KAAK,CAACsB,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAlB;AADU,OAA3B;AAGAY,MAAAA,kBAAkB,CAACU,kBAAD,CAAlB;AACA,YAAME,qBAAqB,GAAG;AAC5BD,QAAAA,aAAa,EAAEhD,QAAQ,CAACwB,GAAT,CAAcC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAArB;AADa,OAA9B;AAGAkB,MAAAA,mBAAmB,CAACM,qBAAD,CAAnB;AAEA,YAAMC,sBAAsB,GAAG;AAC7BF,QAAAA,aAAa,EAAE5C,SAAS,CAACoB,GAAV,CAAeC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAtB;AADc,OAA/B;AAGAmB,MAAAA,mBAAmB,CAACM,sBAAD,CAAnB;AACD;AACF,GAjBQ,EAiBN,CAAChD,KAAD,EAAQE,SAAR,EAAmBJ,QAAnB,CAjBM,CAAT;AAmBAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+D,EAAE,GAAG,IAAI1D,OAAJ,EAAX;AACAM,IAAAA,UAAU,CAACoD,EAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKF,QAAMC,mBAAmB,GAAE,YAAS;AAClC,UAAM/B,oBAAoB,GAAGzB,QAA7B;AACA,UAAM0B,iBAAiB,GAAG,MAAMxB,OAAO,CAACsB,gBAAR,CAC9BC,oBAD8B,CAAhC;AAGAgC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgChC,iBAAhC,EALkC,CAOlC;AACD,GARD;;AAWE,QAAMwB,QAAQ,GAAG,YAAY;AAC3B,UAAMS,MAAM,GAAG,OAAMrD,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAEsB,GAAP,CAAYC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAnB,CAAN,CAAf;AACA,UAAM+B,SAAS,GAAG,OAAMxD,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAEwB,GAAV,CAAeC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAtB,CAAN,CAAlB;AACA,UAAMgC,UAAU,GAAG,OAAMrD,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAEoB,GAAX,CAAgBC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAvB,CAAN,CAAnB;AACA,UAAMiC,KAAK,GAAG,MAAM5D,OAAO,CAAC6D,iBAAR,CAA0BJ,MAA1B,CAApB;AACA,UAAMK,aAAa,GAAG,MAAM9D,OAAO,CAAC6D,iBAAR,CAA0BH,SAA1B,CAA5B;AACA,UAAMK,cAAc,GAAG,MAAM/D,OAAO,CAAC6D,iBAAR,CAA0BF,UAA1B,CAA7B;AACA,UAAMhD,YAAY,CAChBiD,KADgB,aAChBA,KADgB,uBAChBA,KAAK,CAAEI,QAAP,CAAgBtC,GAAhB,CAAqBuC,IAAD;AAAA;;AAAA,aAAUA,IAAV,aAAUA,IAAV,gDAAUA,IAAI,CAAEC,oBAAhB,0DAAU,sBAA4BC,QAAtC;AAAA,KAApB,CADgB,CAAlB;AAGA,UAAMtD,qBAAqB,CACzBiD,aADyB,aACzBA,aADyB,uBACzBA,aAAa,CAAEE,QAAf,CAAwBtC,GAAxB,CACGuC,IAAD;AAAA;;AAAA,aAAUA,IAAV,aAAUA,IAAV,iDAAUA,IAAI,CAAEC,oBAAhB,2DAAU,uBAA4BC,QAAtC;AAAA,KADF,CADyB,CAA3B;AAKA,UAAMpD,sBAAsB,CAC1BgD,cAD0B,aAC1BA,cAD0B,uBAC1BA,cAAc,CAAEC,QAAhB,CAAyBtC,GAAzB,CACGuC,IAAD;AAAA;;AAAA,aAAUA,IAAV,aAAUA,IAAV,iDAAUA,IAAI,CAAEC,oBAAhB,2DAAU,uBAA4BC,QAAtC;AAAA,KADF,CAD0B,CAA5B;AAKA1D,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GArBD;;AAuBAnB,EAAAA,SAAS,CAAC,MAAI,CAAE,CAAP,CAAT;AACA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAE8E,QAAAA,EAAE,EAAE;AAAN,OAAT;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBD,UAAAA,EAAE,EAAE;AAArB,SADN;AAEE,QAAA,KAAK,EAAEtE,QAFT;AAGE,QAAA,QAAQ,EAAGwE,CAAD,IAAOvE,WAAW,CAACuE,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAE;AAAEJ,QAAAA,EAAE,EAAE;AAAN,OAAZ;AAAuB,MAAA,OAAO,EAAC,WAA/B;AAA2C,MAAA,OAAO,EAAE9C,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AAAA,6BACE;AAAA,kBACGd,OAAO,GACN,SADM,gBAGN;AAAA,qBACGE,SAAS,CAACqC,MAAV,GAAmB,CAAnB,GACG3C,KADH,aACGA,KADH,uBACGA,KAAK,CAAEsB,GAAP,CAAW,CAAC+C,IAAD,EAAOC,KAAP,kBACT;AAAA,mCACE;AACE,cAAA,KAAK,EAAE;AACLC,gBAAAA,SAAS,EAAE,mBADN;AAELC,gBAAAA,OAAO,EAAE;AAFJ,eADT;AAAA,sCAOI;AACE,gBAAA,KAAK,EAAE;AACLC,kBAAAA,QAAQ,EAAE,UADL;AAELC,kBAAAA,MAAM,EAAE,MAFH;AAGLC,kBAAAA,KAAK,EAAE;AAHF,iBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAgBI;AACE,gBAAA,GAAG,EAAE/D,QAAQ,CAACU,GAAT,CAAcC,CAAD,IAAOA,CAAC,CAACqD,cAAtB,EAAsCN,KAAtC,CADP;AAEE,gBAAA,KAAK,EAAE;AACLO,kBAAAA,MAAM,EAAE,MADH;AAELZ,kBAAAA,KAAK,EAAE,MAFF;AAGLa,kBAAAA,YAAY,EAAE;AAHT;AAFT;AAAA;AAAA;AAAA;AAAA,sBAhBJ,EAuBO,GAvBP,EAwBKxE,SAAS,CAACgE,KAAD,CAxBd,oCAwBuC;AACnC,gBAAA,IAAI,EAAG,gCAA+BD,IAAI,CAAC,CAAD,CAAI,EADX;AAEnC,gBAAA,KAAK,EAAE;AAAEU,kBAAAA,MAAM,EAAE;AAAV,iBAF4B;AAGnC,gBAAA,MAAM,EAAC,OAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxBvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,CADH,GAqCG,EAtCN,EAuCGvE,kBAAkB,CAACmC,MAAnB,GAA4B,CAA5B,GACG7C,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEwB,GAAV,CAAc,CAAC0D,MAAD,EAASV,KAAT,kBACZ;AAAA,mCACE;AACE,cAAA,KAAK,EAAE;AACLC,gBAAAA,SAAS,EAAE,mBADN;AAELC,gBAAAA,OAAO,EAAE;AAFJ,eADT;AAAA,sCAME;AACE,gBAAA,KAAK,EAAE;AACLC,kBAAAA,QAAQ,EAAE,UADL;AAELC,kBAAAA,MAAM,EAAE,MAFH;AAGLC,kBAAAA,KAAK,EAAE;AAHF,iBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAeE;AACE,gBAAA,GAAG,EAAE7D,SAAS,CAACQ,GAAV,CAAeC,CAAD,IAAOA,CAAC,CAACqD,cAAvB,EAAuCN,KAAvC,CADP;AAEE,gBAAA,KAAK,EAAE;AACLO,kBAAAA,MAAM,EAAE,MADH;AAELZ,kBAAAA,KAAK,EAAE,MAFF;AAGLa,kBAAAA,YAAY,EAAE;AAHT;AAFT;AAAA;AAAA;AAAA;AAAA,sBAfF,EAuBGtE,kBAAkB,CAAC8D,KAAD,CAvBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,CADH,GA8BG,EArEN,EAsEG5D,mBAAmB,CAACiC,MAApB,GAA6B,CAA7B,GACGzC,SAAS,CAACoB,GAAV,CAAc,CAAC2D,KAAD,EAAQX,KAAR,kBACZ;AAAA,mCACE;AACE,cAAA,KAAK,EAAE;AACLC,gBAAAA,SAAS,EAAE,mBADN;AAELC,gBAAAA,OAAO,EAAE;AAFJ,eADT;AAAA,sCAME;AACE,gBAAA,KAAK,EAAE;AACLC,kBAAAA,QAAQ,EAAE,UADL;AAELC,kBAAAA,MAAM,EAAE,MAFH;AAGLC,kBAAAA,KAAK,EAAE;AAHF,iBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAeE;AACE,gBAAA,GAAG,EAAE3D,SAAS,CAACM,GAAV,CAAeC,CAAD,IAAOA,CAAC,CAACqD,cAAvB,EAAuCN,KAAvC,CADP;AAEE,gBAAA,KAAK,EAAE;AACLO,kBAAAA,MAAM,EAAE,MADH;AAELZ,kBAAAA,KAAK,EAAE,MAFF;AAGLa,kBAAAA,YAAY,EAAE;AAHT;AAFT;AAAA;AAAA;AAAA;AAAA,sBAfF,EAsBK,GAtBL,EAuBGpE,mBAAmB,CAAC4D,KAAD,CAvBtB,gBAuByCW,KAAK,CAAC,CAAD,CAvB9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,CADH,GA8BG,EApGN;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF,qBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+HD,CAvQD;;GAAMxF,Y;;KAAAA,Y;AAyQN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Box, TextField } from \"@mui/material\";\r\nimport DesoApi from \"./libs/desoApi\";\r\nimport axios from \"axios\";\r\nconst Notification = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [desoApi, setDesoApi] = useState(null);\r\n\r\n  const [follower, setFollower] = useState([]);\r\n  const [liker, setLiker] = useState([]);\r\n  const [diamonder, setDiamonder] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [usernames, setUsernames] = useState([]);\r\n  const [usernamesFollowers, setUsernamesFollowers] = useState([]);\r\n  const [usernamesDiamonders, setUsernamesDiamonders] = useState([]);\r\n\r\n  const [pictures, setPictures] = useState([]);\r\n\r\n  const [pictures2, setPictures2] = useState([]);\r\n\r\n  const [pictures3, setPictures3] = useState([]);\r\n  const getNotifications = async () => {\r\n    const PublicKeyBase58Check = username;\r\n    const notificationsCall = await desoApi.getNotifications(\r\n      PublicKeyBase58Check\r\n    );\r\n    await setLiker(\r\n      notificationsCall?.Notifications.map((x) =>\r\n        x.Metadata.TxnType === \"LIKE\"\r\n          ? [\r\n              x.Metadata.TransactorPublicKeyBase58Check,\r\n              x.Metadata.LikeTxindexMetadata.PostHashHex,\r\n            ]\r\n          : \"x\"\r\n      ).filter((item, pos) => item.indexOf(\"x\"))\r\n    );\r\n    await setFollower(\r\n      notificationsCall?.Notifications.map((x) =>\r\n        x.Metadata.TxnType === \"FOLLOW\"\r\n          ? [x.Metadata.TransactorPublicKeyBase58Check]\r\n          : \"x\"\r\n      ).filter((item, pos) => item.indexOf(\"x\"))\r\n    );\r\n    await setDiamonder(\r\n      notificationsCall?.Notifications.map((x) =>\r\n        x.Metadata.TxnType === \"BASIC_TRANSFER\"\r\n          ? [\r\n              x.Metadata.TransactorPublicKeyBase58Check,\r\n              x.Metadata.BasicTransferTxindexMetadata.DiamondLevel,\r\n              x.Metadata.BasicTransferTxindexMetadata.PostHashHex,\r\n            ]\r\n          : \"x\"\r\n      ).filter((item, pos) => item.indexOf(\"x\"))\r\n    );\r\n  };\r\n\r\n  const getProfilePictures = async (body) => {\r\n    return await axios\r\n      .post(\r\n        \"https://deso-get-profile-pictures.herokuapp.com/api/get-users-username-and-profile-picture\",\r\n        body\r\n      )\r\n      .then((res) => setPictures(res.data));\r\n  };\r\n  const getProfilePictures2 = async (body) => {\r\n    return await axios\r\n      .post(\r\n        \"https://deso-get-profile-pictures.herokuapp.com/api/get-users-username-and-profile-picture\",\r\n        body\r\n      )\r\n      .then((res) => setPictures2(res.data));\r\n  };\r\n  const getProfilePictures3 = async (body) => {\r\n    return await axios\r\n      .post(\r\n        \"https://deso-get-profile-pictures.herokuapp.com/api/get-users-username-and-profile-picture\",\r\n        body\r\n      )\r\n      .then((res) => setPictures3(res.data));\r\n  };\r\n  useEffect(() => {\r\n    if (liker.length > 0 && diamonder.length > 0 && follower.length > 0) {\r\n      getUsers();\r\n      const allPublicKeysLiker = {\r\n        ListPublicKey: liker.map((x) => x[0]),\r\n      };\r\n      getProfilePictures(allPublicKeysLiker);\r\n      const allPublicKeysFollower = {\r\n        ListPublicKey: follower.map((x) => x[0]),\r\n      };\r\n      getProfilePictures2(allPublicKeysFollower);\r\n\r\n      const allPublicKeysDiamonder = {\r\n        ListPublicKey: diamonder.map((x) => x[0]),\r\n      };\r\n      getProfilePictures3(allPublicKeysDiamonder);\r\n    }\r\n  }, [liker, diamonder, follower]);\r\n\r\n  useEffect(() => {\r\n    const da = new DesoApi();\r\n    setDesoApi(da);\r\n  }, []);\r\n\r\nconst filterNotifications =async()=>{\r\n  const PublicKeyBase58Check = username;\r\n  const notificationsCall = await desoApi.getNotifications(\r\n    PublicKeyBase58Check\r\n  );\r\n  console.log(\"notificationsCall\",notificationsCall)\r\n\r\n  //SUBMIT_POST \"FOLLOW\" DAO_COIN_TRANSFER \"LIKE\" NFT_TRANSFER \"BASIC_TRANSFER\" COIN_TRANSFER \r\n}\r\n\r\n\r\n  const getUsers = async () => {\r\n    const likers = await liker?.map((x) => x[0]);\r\n    const followers = await follower?.map((x) => x[0]);\r\n    const diamonders = await diamonder?.map((x) => x[0]);\r\n    const users = await desoApi.getUsersStateless(likers);\r\n    const followerUsers = await desoApi.getUsersStateless(followers);\r\n    const diamonderUsers = await desoApi.getUsersStateless(diamonders);\r\n    await setUsernames(\r\n      users?.UserList.map((user) => user?.ProfileEntryResponse?.Username)\r\n    );\r\n    await setUsernamesFollowers(\r\n      followerUsers?.UserList.map(\r\n        (user) => user?.ProfileEntryResponse?.Username\r\n      )\r\n    );\r\n    await setUsernamesDiamonders(\r\n      diamonderUsers?.UserList.map(\r\n        (user) => user?.ProfileEntryResponse?.Username\r\n      )\r\n    );\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(()=>{})\r\n  return (\r\n    <div>\r\n      <Box sx={{ mb: 2 }}>\r\n        <TextField\r\n          sx={{ width: \"100%\", mb: 2 }}\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          label=\"Get notifications of any profile using his/her public key\"\r\n        />\r\n      </Box>\r\n      <Box />\r\n      <Button sx={{ mb: 2 }} variant=\"contained\" onClick={getNotifications}>\r\n        Get notifications\r\n      </Button>\r\n\r\n      <>\r\n        <div>\r\n          {loading ? (\r\n            \"loading\"\r\n          ) : (\r\n            <>\r\n              {usernames.length > 0\r\n                ? liker?.map((like, index) => (\r\n                    <ul>\r\n                      <li\r\n                        style={{\r\n                          borderTop: \"1px solid #b0b0b0\",\r\n                          padding: \"0.3rem\",\r\n                        }}\r\n                      >\r\n                       \r\n                          <span\r\n                            style={{\r\n                              position: \"relative\",\r\n                              bottom: \"10px\",\r\n                              right: \"5px\",\r\n                            }}\r\n                          >\r\n                            ❤️\r\n                          </span>\r\n                          <img\r\n                            src={pictures.map((x) => x.ProfilePicture)[index]}\r\n                            style={{\r\n                              height: \"38px\",\r\n                              width: \"38px\",\r\n                              borderRadius: \"50%\",\r\n                            }}\r\n                          />{\" \"}\r\n                          {usernames[index]} Liked your post <a\r\n                          href={`https://diamondapp.com/posts/${like[1]}`}\r\n                          style={{ cursor: \"pointer\" }}\r\n                          target=\"blank\"\r\n                        >\r\n                          See more...\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  ))\r\n                : \"\"}\r\n              {usernamesFollowers.length > 0\r\n                ? follower?.map((follow, index) => (\r\n                    <ul>\r\n                      <li\r\n                        style={{\r\n                          borderTop: \"1px solid #b0b0b0\",\r\n                          padding: \"0.3rem\",\r\n                        }}\r\n                      >\r\n                        <span\r\n                          style={{\r\n                            position: \"relative\",\r\n                            bottom: \"10px\",\r\n                            right: \"5px\",\r\n                          }}\r\n                        >\r\n                          ❤️\r\n                        </span>\r\n                        <img\r\n                          src={pictures2.map((x) => x.ProfilePicture)[index]}\r\n                          style={{\r\n                            height: \"38px\",\r\n                            width: \"38px\",\r\n                            borderRadius: \"50%\",\r\n                          }}\r\n                        />\r\n                        {usernamesFollowers[index]} Followed you.\r\n                      </li>\r\n                    </ul>\r\n                  ))\r\n                : \"\"}\r\n              {usernamesDiamonders.length > 0\r\n                ? diamonder.map((trans, index) => (\r\n                    <ul>\r\n                      <li\r\n                        style={{\r\n                          borderTop: \"1px solid #b0b0b0\",\r\n                          padding: \"0.3rem\",\r\n                        }}\r\n                      >\r\n                        <span\r\n                          style={{\r\n                            position: \"relative\",\r\n                            bottom: \"10px\",\r\n                            right: \"5px\",\r\n                          }}\r\n                        >\r\n                          ❤️\r\n                        </span>\r\n                        <img\r\n                          src={pictures3.map((x) => x.ProfilePicture)[index]}\r\n                          style={{\r\n                            height: \"38px\",\r\n                            width: \"38px\",\r\n                            borderRadius: \"50%\",\r\n                          }}\r\n                        />{\" \"}\r\n                        {usernamesDiamonders[index]} Gave you {trans[1]} Diamond\r\n                      </li>\r\n                    </ul>\r\n                  ))\r\n                : \"\"}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}